# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qfwmO0EdNdjdmmCEhxucv1rAQ5qUebP2
"""

import pickle
import streamlit as st
import numpy as np
from PIL import Image, ImageOps

# Load saved components
with open("mnist_nb_model.pkl", "rb") as f:
    model = pickle.load(f)

with open("mnist_scaler.pkl", "rb") as f:
    scaler = pickle.load(f)

with open("mnist_pca.pkl", "rb") as f:
    pca = pickle.load(f)

st.title("MNIST Digit Classifier with Naive Bayes")

uploaded_file = st.file_uploader("Upload a 28x28 grayscale digit image (png/jpg/jpeg)", type=["png", "jpg", "jpeg"])

if uploaded_file:
    image = Image.open(uploaded_file).convert("L")  # Grayscale
    image = ImageOps.invert(image)  # MNIST digits are white on black

    image = image.resize((28, 28))  # Resize to 28x28 if not already
    st.image(image, caption="Uploaded Image", width=150)

    # Prepare image for prediction
    img_array = np.array(image).reshape(1, -1)  # flatten
    img_scaled = scaler.transform(img_array)
    img_pca = pca.transform(img_scaled)

    prediction = model.predict(img_pca)[0]
    st.subheader(f"Predicted Digit: {prediction}")

